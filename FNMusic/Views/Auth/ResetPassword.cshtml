@model UserMgt.Models.ResetPassword
@using Microsoft.AspNetCore.Http
@using UserMgt.Models;

@inject  IHttpContextAccessor httpContextAccessor
@{
    ViewData["Title"] = "Reset Password";
    Layout = "~/Views/Shared/_AuthLayout.cshtml";

    bool reset = Convert.ToBoolean(httpContextAccessor.HttpContext.Session.GetString("RESET"));
    bool Exists = Convert.ToBoolean(httpContextAccessor.HttpContext.Session.GetString("EXISTS"));
}

<section class="m-t-lg wrapper">
    <div class="container aside-xl bg-white" style="border-style:solid; border-width:1px; border-radius:5px;">
        <header class="wrapper text-center">
            <h3>Reset your password</h3>
        </header>
        @if (!reset)
        {
        <section class="form-horizontal" style="padding: 0px 30px 30px 30px">
            <h5 class="text-center">Fill in all necessary information</h5>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger small" })
            @using (Html.BeginForm("PasswordReset", "Auth", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                if (Model.AuthKey == AuthKey.Email)
                {
                    <div class="form-group">
                        @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger small" })
                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control input-sm text-center", placeholder = "Email", type = "email", required=true })
                        <a class="pull-right" href="/resetPassword/@Model.Token?rpa=1"><small class="text-sm">phone?</small></a>
                    </div>
                }
                else if (Model.AuthKey == AuthKey.Phone)
                {
                    <div class="form-group">
                        @Html.ValidationMessageFor(x => x.Phone, "", new { @class = "text-danger small" })
                        @Html.TextBoxFor(x => x.Phone, new { @class = "form-control input-sm text-center", placeholder = "Phone", type = "Phone", required=true })
                        <a class="pull-right" href="/resetPassword/@Model.Token?rpa=0"><small class="text-sm">email?</small></a>
                    </div>
                }

                @if (Exists)
                {
                    <div class="form-group">
                        @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger small"})
                        @Html.PasswordFor(x => x.Password, new { @class = "form-control input-sm text-center", placeholder = "New Password" })
                    </div>
                    <div class="form-group">
                        @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control input-sm text-center", placeholder = "Confirm Password" })
                    </div>
                }

                <button type="submit" class="btn btn-warning btn-block">
                    <span>Reset Password</span>
                </button>
            }
        </section>
        }
        else
        {
            <section style="padding:0px 30px 30px 30px;">
                <h4 class="text-center">Dear, @Model.Email</h4>
                <h5 class="text-center">You have successfully reset your password</h5>
                <br />
                <a asp-action="Login" asp-controller="Auth" class="btn btn-success btn-block">
                    <span>Click to Login</span>
                </a>
            </section>


        }

    </div>
</section>

