
@model UserMgt.Models.User;
@using Microsoft.AspNetCore.Http;
@using BaseLib.Models;
@using UserMgt.Models;
@using BaseLib.Utils;
@using UserMgt.Services;
@inject IHttpContextAccessor httpContextAccessor;
@inject IUserService<Result<User>> userService;
@inject IUserService<Result<User>> userService2;
@inject IHttpContextAccessor httpContextAccessor;
@{
    Layout = "~/Views/Shared/_PlayerLayout.cshtml";
    ViewData["Title"] = Model.Name != null ? Model.Name : Model.Username;

    string[] months = new string[]
    {
        "January",
        "Febuary",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
    };



    @functions{

        public async Task<bool> IsFollowing(long userId, long fanId, string accessToken)
        {
            return await Task.Run(async () =>
            {
                try
                {
                    HttpResult<Result<User>> isfollowingHttpResult = await userService.IsFollowing(userId, fanId, accessToken);
                    if (!HttpStatusUtils.Is2xxSuccessful(isfollowingHttpResult.Status))
                    {
                        throw new Exception(isfollowingHttpResult.FailureResponse.Description);
                    }

                    Result<User> isfollowingResult = isfollowingHttpResult.Content;
                    User data = isfollowingResult.Data;
                    if (data != null && Model.Id.Equals(data.Id))
                    {
                        return true;
                    }
                }
                catch (Exception e)
                {
                    //todo
                }

                return false;
            });
        }

        public async Task<bool> isFollower(long userId, long fanId, string accessToken)
        {
            return await Task.Run(async () =>
            {
                try
                {
                    HttpResult<Result<User>> isfollowerHttpResult = await userService2.IsFollower(userId,fanId,accessToken);
                    if (!HttpStatusUtils.Is2xxSuccessful(isfollowerHttpResult.Status))
                    {
                        throw new Exception(isfollowerHttpResult.FailureResponse.Description);
                    }

                    Result<User> isfollowerResult = isfollowerHttpResult.Content;
                    User data = isfollowerResult.Data;
                    if (data != null && Model.Id.Equals(data.Id))
                    {
                        return true;
                    }
                }
                catch (Exception e)
                {
                    //todo
                }

                return false;
            });
        }

        public async Task<bool> ShouldDisplayDate(Privacy monthAndDay, Privacy year, long currentUserId, bool isfollowing, bool isfollower)
        {
            return await Task.Run(() =>
            {
                if (Model.Id == currentUserId)
                {
                    return true;
                }
                else if ((Model.MonthAndDay == Privacy.PUBLIC || Model.Year == Privacy.PUBLIC) && (Model.Id != currentUserId))
                {
                    return true;
                }
                else if ((Model.MonthAndDay == Privacy.FOLLOWERS || Model.Year == Privacy.FOLLOWERS) && (Model.Id != currentUserId))
                {
                    if (isfollowing)
                    {
                        return true;
                    }
                }
                else if ((Model.MonthAndDay == Privacy.FOLLOWING || Model.Year == Privacy.FOLLOWING) && (Model.Id != currentUserId))
                {
                    if (isfollower)
                    {
                        return true;
                    }
                }
                else if ((Model.MonthAndDay == Privacy.FOLLOWBACK || Model.Year == Privacy.FOLLOWBACK) && (Model.Id != currentUserId))
                {
                    if (isfollowing && isfollower)
                    {
                        return true;
                    }
                }

                return false;
            });
        }

    }

    long currentUserId = Convert.ToInt64(httpContextAccessor.HttpContext.User.Claims.First(x => x.Type == "Id").Value);
    string accessToken = httpContextAccessor.HttpContext.User.Claims.First(x => x.Type == "X-AUTH-TOKEN").Value;
    bool isfollowing = await IsFollowing(Model.Id, currentUserId, accessToken);
    bool isfollower = (Model.Id != currentUserId) ? await isFollower(currentUserId, Model.Id, accessToken) : false;
    bool displayDOB = await ShouldDisplayDate(Model.MonthAndDay, Model.Year, currentUserId, isfollowing, isfollower);
}

<section>
    <section class="vbox">
        <section class="scrollable">
            <section class="hbox stretch">
                <aside class="aside-lg bg-light" @*style="border-right-style:solid; border-right-width:1px;"*@>
                    <section class="vbox">
                        <section class="scrollable">
                            <div class="wrapper">
                                <div style="padding-top:50px;">
                                    <div class="pull-right">
                                        @if (Model.Id == currentUserId)
                                        {
                                            <a class="btn btn-default btn-rounded" href="/@httpContextAccessor.HttpContext.User.Claims.First(x => x.Type == "Username").Value/updateprofile" data-toggle="ajaxModal">
                                                <span class="text">Edit Profile</span>
                                            </a>
                                        }
                                        else
                                        {
                                            if (isfollowing)
                                            {
                                                <a class="btn btn-default btn-rounded" onclick="unfollow()">
                                                    <span class="text">Unfollow </span>
                                                </a>
                                                <script type="text/javascript">
                                                    function unfollow() {
                                                        const Http = new XMLHttpRequest();
                                                        const url = '/unfollow?userId=@Model.Id&fanId=@currentUserId';
                                                        Http.open("POST", url);
                                                        Http.send();
                                                        Http.onreadystatechange = (e) => {
                                                            if (Http.readyState == 4) {
                                                                document.location.reload(true);
                                                            }
                                                        }
                                                    }
                                                </script>
                                            }
                                            else
                                            {
                                                <a class="btn btn-default btn-rounded" onclick="follow()">
                                                    <span class="text"> Follow </span>
                                                </a>
                                                <script type="text/javascript">
                                                    function follow() {
                                                        const Http = new XMLHttpRequest();
                                                        const url = '/follow?userId=@Model.Id&fanId=@currentUserId';
                                                        Http.open("POST", url);
                                                        Http.send();
                                                        Http.onreadystatechange = (e) => {
                                                            console.log(Http.responseText);
                                                            if (Http.readyState == 4) {
                                                                document.location.reload(true);
                                                            }
                                                        }
                                                    }
                                                </script>
                                            }
                                        }
                                    </div>
                                </div>
                                <div class="m-b m-t" style="padding-top:60px;">
                                    <div class="h3 text-black">@Model.Name</div>
                                    <div class="h5">
                                        @@@Model.Username
                                        @while (currentUserId != Model.Id)
                                        {
                                            if (isfollower)
                                            {
                                                <small class="text-muted">Follows you</small>
                                            }
                                            break;
                                        }
                                    </div>
                                    <div class="h5 text-black" style="padding-top:15px;">@Model.Biography</div>
                                    <div class="h5" style="padding-top:10px;">
                                        @if (!string.IsNullOrEmpty(Model.Location))
                                        {
                                            <a class="text-muted">
                                                <i class="fa fa-map-marker"></i>
                                                <span class="text-muted">@Model.Location</span>
                                            </a>
                                        }
                                    </div>
                                    <div class="h5" style="padding-top:10px;">
                                        @if (!string.IsNullOrEmpty(Model.Website))
                                        {
                                            <a href="@Model.Website" class="link">
                                                <i class="fa fa-link"></i>
                                                <span>@Model.Website</span>
                                            </a>
                                        }
                                    </div>

                                    @* Displays the Date of Birth of the User Account based on Privacy *@
                                    @if (displayDOB)
                                    {
                                        <div class="h5" style="padding-top:10px">
                                            <a class="text-muted">
                                                <i class="icon-bell"></i>
                                                <span>Born</span>
                                                @switch (Model.MonthAndDay)
                                                {
                                                    case Privacy.PUBLIC:
                                                        <span>@months[Model.DateOfBirth.Month - 1] @Model.DateOfBirth.Day</span>
                                                        break;
                                                    case Privacy.FOLLOWERS:
                                                        if (isfollowing || Model.Id == currentUserId)
                                                        {
                                                            <span>@months[Model.DateOfBirth.Month - 1] @Model.DateOfBirth.Day</span>
                                                        }
                                                        break;
                                                    case Privacy.FOLLOWING:
                                                        if (isfollower || Model.Id == currentUserId)
                                                        {
                                                            <span>@months[Model.DateOfBirth.Month - 1] @Model.DateOfBirth.Day</span>
                                                        }
                                                        break;
                                                    case Privacy.FOLLOWBACK:
                                                        if (isfollower && isfollowing || Model.Id == currentUserId)
                                                        {
                                                            <span>@months[Model.DateOfBirth.Month - 1] @Model.DateOfBirth.Day</span>
                                                        }
                                                        break;
                                                    case Privacy.PRIVATE:
                                                        if (Model.Id == currentUserId)
                                                        {
                                                            <span>@months[Model.DateOfBirth.Month - 1] @Model.DateOfBirth.Day</span>
                                                        }
                                                        break;
                                                }

                                                @switch (Model.Year)
                                                {
                                                    case Privacy.PUBLIC:
                                                        if (Model.MonthAndDay == Privacy.PUBLIC ||
                                                            Model.MonthAndDay == Privacy.FOLLOWERS ||
                                                            Model.MonthAndDay == Privacy.FOLLOWING ||
                                                            Model.MonthAndDay == Privacy.FOLLOWBACK)
                                                        {
                                                            <span>,</span>
                                                        }
                                                        <span> @Model.DateOfBirth.Year</span>
                                                        break;
                                                    case Privacy.FOLLOWERS:
                                                        if (isfollower || Model.Id == currentUserId)
                                                        {
                                                            if (Model.MonthAndDay == Privacy.PUBLIC ||
                                                            Model.MonthAndDay == Privacy.FOLLOWERS ||
                                                            Model.MonthAndDay == Privacy.FOLLOWING ||
                                                            Model.MonthAndDay == Privacy.FOLLOWBACK)
                                                            {
                                                                <span>,</span>
                                                            }
                                                            <span> @Model.DateOfBirth.Year</span>
                                                        }
                                                        break;
                                                    case Privacy.FOLLOWING:
                                                        if (isfollowing || Model.Id == currentUserId)
                                                        {
                                                            if (Model.MonthAndDay == Privacy.PUBLIC ||
                                                            Model.MonthAndDay == Privacy.FOLLOWERS ||
                                                            Model.MonthAndDay == Privacy.FOLLOWING ||
                                                            Model.MonthAndDay == Privacy.FOLLOWBACK)
                                                            {
                                                                <span>,</span>
                                                            }
                                                            <span> @Model.DateOfBirth.Year</span>
                                                        }
                                                        break;
                                                    case Privacy.FOLLOWBACK:
                                                        if (isfollower && isfollowing || Model.Id == currentUserId)
                                                        {
                                                            if (Model.MonthAndDay == Privacy.PUBLIC ||
                                                            Model.MonthAndDay == Privacy.FOLLOWERS ||
                                                            Model.MonthAndDay == Privacy.FOLLOWING ||
                                                            Model.MonthAndDay == Privacy.FOLLOWBACK)
                                                            {
                                                                <span>,</span>
                                                            }
                                                            <span> @Model.DateOfBirth.Year</span>
                                                        }
                                                        break;
                                                    case Privacy.PRIVATE:
                                                        if (Model.Id == currentUserId)
                                                        {
                                                            if (Model.MonthAndDay == Privacy.PUBLIC ||
                                                            Model.MonthAndDay == Privacy.FOLLOWERS ||
                                                            Model.MonthAndDay == Privacy.FOLLOWING ||
                                                            Model.MonthAndDay == Privacy.FOLLOWBACK)
                                                            {
                                                                <span>,</span>
                                                            }
                                                            <span> @Model.DateOfBirth.Year</span>
                                                        }
                                                        break;
                                                }
                                            </a>
                                        </div>
                                    }

                                    @* Displays the Date the User Account was created *@
                                    <div class="h5" style="padding-top:10px;">
                                        <a class="text-muted">
                                            <i class="icon-calendar"></i>
                                            <span>Joined @months[Model.DateCreated.Month - 1] @Model.DateCreated.Year</span>
                                        </a>
                                    </div>

                                    <div class="h5" style="padding-top:10px;">
                                        <a style="padding-right:10px;">
                                            <span class="text-black">@Model.Following</span>
                                            <span>Following</span>
                                        </a>
                                        <a style="padding-left:10px;">
                                            <span class="text-black">@Model.Followers</span>
                                            <span>Followers</span>
                                        </a>
                                    </div>

                                    <div>
                                        <div class="line"></div>
                                        <small class="text-uc text-xs text-muted">connections</small>
                                        <p class="m-t-sm">
                                            @if (!string.IsNullOrEmpty(Model.TwitterProfile))
                                            {
                                                <a href="@Model.TwitterProfile" class="btn btn-rounded btn-twitter btn-icon"><i class="fa fa-twitter fa-2x"></i></a>
                                            }

                                            @if (!string.IsNullOrEmpty(Model.FacebookProfile))
                                            {
                                                <a href="@Model.FacebookProfile" class="btn btn-rounded btn-facebook btn-icon"><i class="fa fa-facebook fa-2x"></i></a>
                                            }

                                            @if (!string.IsNullOrEmpty(Model.YoutubePage))
                                            {
                                                <a href="@Model.YoutubePage" class="btn btn-rounded btn-icon"><i class="fa fa-youtube fa-2x"></i></a>
                                            }

                                        </p>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </section>
                </aside>
                <aside class="bg-white">
                    <section class="vbox">
                        <header class="header bg-light lt">
                            <ul class="nav nav-tabs nav-white">
                                <li class="active"><a href="#activity" data-toggle="tab">Activity</a></li>
                                <li class=""><a href="#events" data-toggle="tab">Events</a></li>
                                <li class=""><a href="#interaction" data-toggle="tab">Interaction</a></li>
                            </ul>
                        </header>
                        <section class="scrollable">
                            <div class="tab-content">
                                <div class="tab-pane active" id="activity">
                                    <ul class="list-group no-radius m-b-none m-t-n-xxs list-group-lg no-border">
                                        <li class="list-group-item">
                                            <a href="#" class="thumb-sm pull-left m-r-sm"> <img src="images/a0.png" class="img-circle"> </a>
                                            <a href="#" class="clear">
                                                <small class="pull-right">3 minuts ago</small> <strong class="block">Drew Wllon</strong>                                                            <small>Wellcome and play this web application template ... </small>
                                            </a>
                                        </li>
                                        <li class="list-group-item">
                                            <a href="#" class="thumb-sm pull-left m-r-sm"> <img src="images/a1.png" class="img-circle"> </a>
                                            <a href="#" class="clear">
                                                <small class="pull-right">1 hour ago</small> <strong class="block">Jonathan George</strong>                                                            <small>Morbi nec nunc condimentum...</small>
                                            </a>
                                        </li>
                                        <li class="list-group-item">
                                            <a href="#" class="thumb-sm pull-left m-r-sm"> <img src="images/a2.png" class="img-circle"> </a>
                                            <a href="#" class="clear">
                                                <small class="pull-right">2 hours ago</small> <strong class="block">Josh Long</strong>                                                            <small>Vestibulum ullamcorper sodales nisi nec...</small>
                                            </a>
                                        </li>
                                        <li class="list-group-item">
                                            <a href="#" class="thumb-sm pull-left m-r-sm"> <img src="images/a3.png" class="img-circle"> </a>
                                            <a href="#" class="clear">
                                                <small class="pull-right">1 day ago</small> <strong class="block">Jack Dorsty</strong>                                                            <small>Morbi nec nunc condimentum...</small>
                                            </a>
                                        </li>
                                        <li class="list-group-item">
                                            <a href="#" class="thumb-sm pull-left m-r-sm"> <img src="images/a4.png" class="img-circle"> </a>
                                            <a href="#" class="clear">
                                                <small class="pull-right">3 days ago</small> <strong class="block">Morgen Kntooh</strong>                                                            <small>Mobile first web app for startup...</small>
                                            </a>
                                        </li>
                                        <li class="list-group-item">
                                            <a href="#" class="thumb-sm pull-left m-r-sm"> <img src="images/a5.png" class="img-circle"> </a>
                                            <a href="#" class="clear">
                                                <small class="pull-right">Jun 21</small> <strong class="block">Yoha Omish</strong>                                                            <small>Morbi nec nunc condimentum...</small>
                                            </a>
                                        </li>
                                        <li class="list-group-item">
                                            <a href="#" class="thumb-sm pull-left m-r-sm"> <img src="images/a6.png" class="img-circle"> </a>
                                            <a href="#" class="clear">
                                                <small class="pull-right">May 10</small> <strong class="block">Gole Lido</strong>                                                            <small>Vestibulum ullamcorper sodales nisi nec...</small>
                                            </a>
                                        </li>
                                        <li class="list-group-item">
                                            <a href="#" class="thumb-sm pull-left m-r-sm"> <img src="images/a7.png" class="img-circle"> </a>
                                            <a href="#" class="clear">
                                                <small class="pull-right">Jan 2</small> <strong class="block">Jonthan Snow</strong>                                                            <small>Morbi nec nunc condimentum...</small>
                                            </a>
                                        </li>
                                        <li class="list-group-item" href="#email-content" data-toggle="class:show">
                                            <a href="#" class="thumb-sm pull-left m-r-sm"> <img src="images/a8.png" class="img-circle"> </a>
                                            <a href="#" class="clear">
                                                <small class="pull-right">3 minuts ago</small> <strong class="block">Drew Wllon</strong>                                                            <small>Vestibulum ullamcorper sodales nisi nec sodales nisi nec sodales nisi nec...</small>
                                            </a>
                                        </li>
                                        <li class="list-group-item">
                                            <a href="#" class="thumb-sm pull-left m-r-sm"> <img src="images/a9.png" class="img-circle"> </a>
                                            <a href="#" class="clear">
                                                <small class="pull-right">1 hour ago</small> <strong class="block">Jonathan George</strong>                                                            <small>Morbi nec nunc condimentum...</small>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="tab-pane" id="events">
                                    <div class="text-center wrapper"> <i class="fa fa-spinner fa fa-spin fa fa-large"></i> </div>
                                </div>
                                <div class="tab-pane" id="interaction">
                                    <div class="text-center wrapper"> <i class="fa fa-spinner fa fa-spin fa fa-large"></i> </div>
                                </div>
                            </div>
                        </section>
                    </section>
                </aside>
                <aside class="col-lg-3 b-l">
                    @*<section class="vbox">
                            <section class="scrollable padder-v">

                                <div class="panel clearfix">
                                    <div class="panel-body">
                                        <a href="#" class="thumb pull-left m-r"> <img src="images/a0.png" class="img-circle"> </a>
                                        <div class="clear">
                                            <a href="https://twitter.com/beyonce" class="text-info">@Model.FirstName @Model.LastName</a>
                                            <br />
                                            <a href="https://twitter.com/beyonce?ref_src=twsrc%5Etfw" class="twitter-follow-button" data-show-count="false">Follow @@beyonce</a>
                                            <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
                                        </div>
                                    </div>
                                </div>
                                <a class="twitter-timeline" href="https://twitter.com/Beyonce?ref_src=twsrc%5Etfw">Tweets by Beyonce</a>
                                <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
                            </section>
                        </section>*@
                </aside>
            </section>
        </section>
    </section>
    <a href="#" class="hide nav-off-screen-block" data-toggle="class:nav-off-screen,open" data-target="#nav,html"></a>
</section>

